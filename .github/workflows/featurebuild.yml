name: Feature build

on:
  push:
    branches: [ 'feature/*' ]
    paths-ignore:
      - '**/README.md'

env:
  DOTNET_VERSION: '8.0.x' 
  BUILD_CONFIGURATION: 'Release'    
  SONAR_CLOUD_PROJECT_KEY: 'Xhaguatende_api-demo'

defaults:
  run:
    working-directory: ./src

# Ensures only one execution per branch will run at a time.
concurrency:
  group: ${{ github.ref }}
  
jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
        options: "--health-cmd \"mongosh --eval 'db.runCommand({ping: 1})'\" --health-interval 10s --health-timeout 5s --health-retries 5"


    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
            
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration ${{ env.BUILD_CONFIGURATION }} -p:GeneratePackageOnBuild=false

    - name: Test
      run: |
            dotnet test --no-restore --no-build --verbosity normal --configuration ${{ env.BUILD_CONFIGURATION }} \
                    /p:CollectCoverage=true \
                    /p:CoverletOutput=../CoverageResults/ \
                    /p:MergeWith="../CoverageResults/coverage.json" \
                    /p:CoverletOutputFormat=\"opencover,json\" \
                    -m:1

    - name: SonarCloud Analysis
      uses: SonarSource/sonarcloud-github-action@master
      with:
        args: >
            -Dsonar.organization=${{ secrets.SONAR_CLOUD_ORGANIZATION }}
            -Dsonar.projectKey=${{ env.SONAR_CLOUD_PROJECT_KEY }}
            -Dsonar.host.url=${{ secrets.SONAR_CLOUD_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.cs.opencover.reportsPaths=CoverageResults/coverage.opencover.xml
            -Dsonar.coverage.exclusions="**Test*.cs"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
